#include <stdio.h>
#include <math.h>
//IMPORTANTE: eu utilizei math.h APENAS pela função fmod, assim posso calcular MDC e MMC com prescisão double, essa é o único uso da biblioteca.

double soma(double a,double b);

double subt(double a, double b);

double mult (double a, double b);

double divd(double a, double b);

double pote(double a, double b);

double raiz(double a);

double fato(double a);

double mdc (double a, double b);

double mmc (double a, double b);

double bhas(double a, double b, double c);

double bhas2(double a, double b, double c);

int main()
{
    for( ; ; ){
    
    int esc = -1, A, B;
    double n1,n2,n3,n4,n5,res,res2;
printf("Escolha a operação:\n0.Sair\n1.Soma\n2.Subtração\n3.Multiplicação\n4.Divisão\n5.Potenciação\n6.Raiz Quadrada\n7.Fatorial\n8.MDC\n9.MMC\n10.Equação de Segundo Grau\n");
scanf("%d",&esc);
switch (esc)
{
    case 0:
    printf("Sair\n");
    return 0;
    break;
    
    case 1:
    printf ("Soma\n");
    printf("digite os números a serem somados\n");
    scanf("%lf%lf",&n1,&n2);
    n3 = soma(n1,n2);
    printf("a soma de %.5lf e %.5lf é %.5lf\n",n1,n2,n3);
    break;
    
    case 2:
    printf("Subtração\n");
    printf("digite o minuendo\n");
    scanf("%lf",&n1);
    printf("digite o subtraendo\n");
    scanf("%lf",&n2);
    n3 = subt(n1,n2);
    printf("%.5lf menos %.5lf é %.5lf\n",n1,n2,n3);
    break;
    
    case 3:
    printf("Multiplicação\n");
    printf("digite os números a serem multiplicados\n");
    scanf("%lf%lf",&n1,&n2);
    n3 = mult(n1,n2);
    printf("o produto de %.5lf e %.5lf é %.5lf\n",n1,n2,n3);
    break;
    
    case 4:
    printf("Divisão\n");
    printf("digite o dividendo\n");
    scanf("%lf",&n1);
    printf("digite o divisor\n");
    scanf("%lf",&n2);
    n3 = divd(n1,n2);
    printf("o quociente de %.5lf por %.5lf é %.5lf\n",n1,n2,n3);
    break;
    
    case 5:
    printf("Potenciação\n");
    printf("digite o número a ser elevado\n");
    scanf("%lf",&n1);
    printf("digite o expoente\n");
    scanf("%lf",&n2);
    n3 = pote(n1,n2);
    printf("%.5lf elevado a %.5lf é %.5lf\n",n1,n2,n3);
    break;
    
    case 6:
    printf("Raiz Quadrada\n");
    printf("digite o número a ser encontrada a raiz\n");
    scanf("%lf",&n1);
    n2 = raiz(n1);
    printf("a raiz quadrada de %.5lf é %.5lf\n",n1,n2);
    break;
    
    case 7:
    printf("Fatorial\n");
    printf("digite o número a ser utilizado\n");
    scanf("%lf",&n1);
    n2 = fato(n1);
    printf("a fatorial de %.5lf é %.5lf\n",n1,n2);
    break;
    
    case 8:
    printf("MDC\n");
    printf("digite os números para a operação\n");
    scanf("%lf%lf",&n1,&n2);
    res = mdc(n1,n2);
    printf("o mdc de %.5lf e %.5lf é %.5lf\n",n1,n2,res);
    break;
    
    case 9:
    printf("MMC\n");
    printf("digite os números para a operação\n");
    scanf("%lf%lf",&n1,&n2);
    res = mmc(n1,n2);
    printf ("o MMC de %.5lf e %.5lf é %.1lf\n",n1,n2,res);
    
    break;
    
    case 10:
    printf("Equação de Segundo Grau\n");
    printf("digite o valor de a,b e c\n");
    scanf("%lf%lf%lf",&n1,&n2,&n3);
    res = bhas(n1,n2,n3);
    res2 = bhas2(n1,n2,n3);
    printf("as raizes de %.5lf,%.5lf e %.5lf são %.5lf,%.5lf\n",n1,n2,n3,res,res2);
    break;
    
    default :
    printf("número inváldio!\n");
    break;
}

}
}
double soma(double a,double b)
{
    double res=0;
    res= a+b;
    return (res);
}

//Subtração
double subt(double a, double b)
{
    double res=0;
    res= a-b;
    return (res);
}
//Multiplicação
double mult (double a, double b)
{
    double res=0;
    res= a*b;
    return (res);
}
//Divisão
double divd(double a, double b)
{
    double res=0;
    res= a/b;
    return (res);
}
//Potenciação
double pote(double a, double b)
{
      double res,con;
    res = a;
    con = 1;
   while (con<b)
   {
      res= a*res;
       con++;
   }
   return (res);
}
//Raiz Quadrada
double raiz(double a)
{
    double b, res, con;
    b = a;
    con = 0;
    while (con<20)
    {
        b = (0.5)*(b+(a/b));
        con ++;
    }
    res = b;

return (res);
}
//Fatorial
double fato(double a)
{
    
double cont;
cont = a-1;
while (cont>1){
 a= a*cont;
 cont --;
}
return (a);
}
//MDC
double mdc (double a, double b)
{
while (b != 0) {
        int c = b;
        b = fmod(a, b);
        a = c;
    }
    return a;
}
//MMC
double mmc (double a, double b)
{
    double c = mdc(a, b),d;
    d = (a*b)/c;   
    
    return (d);
}
//Bhaskara
double bhas(double a, double b, double c)
{
    double r,res;
    r= ((b*b) - 4*a*c);
    r = raiz(r);
    res= ((b*-1)+r)/(a*2);
   return(res);
}
double bhas2(double a, double b, double c)
{
    double r,res;
    r= ((b*b) - 4*a*c);
    r = raiz(r);
    res= ((b*-1)-r)/(a*2);
   return(res);
}
